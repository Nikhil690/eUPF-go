// Code generated by bpf2go; DO NOT EDIT.

package ebpf

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadFarProgram returns the embedded CollectionSpec for FarProgram.
func LoadFarProgram() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_FarProgramBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load FarProgram: %w", err)
	}

	return spec, err
}

// LoadFarProgramObjects loads FarProgram and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*FarProgramObjects
//	*FarProgramPrograms
//	*FarProgramMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadFarProgramObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadFarProgram()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// FarProgramSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type FarProgramSpecs struct {
	FarProgramProgramSpecs
	FarProgramMapSpecs
}

// FarProgramSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type FarProgramProgramSpecs struct {
	UpfFarProgramFunc *ebpf.ProgramSpec `ebpf:"upf_far_program_func"`
}

// FarProgramMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type FarProgramMapSpecs struct {
}

// FarProgramObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadFarProgramObjects or ebpf.CollectionSpec.LoadAndAssign.
type FarProgramObjects struct {
	FarProgramPrograms
	FarProgramMaps
}

func (o *FarProgramObjects) Close() error {
	return _FarProgramClose(
		&o.FarProgramPrograms,
		&o.FarProgramMaps,
	)
}

// FarProgramMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadFarProgramObjects or ebpf.CollectionSpec.LoadAndAssign.
type FarProgramMaps struct {
}

func (m *FarProgramMaps) Close() error {
	return _FarProgramClose()
}

// FarProgramPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadFarProgramObjects or ebpf.CollectionSpec.LoadAndAssign.
type FarProgramPrograms struct {
	UpfFarProgramFunc *ebpf.Program `ebpf:"upf_far_program_func"`
}

func (p *FarProgramPrograms) Close() error {
	return _FarProgramClose(
		p.UpfFarProgramFunc,
	)
}

func _FarProgramClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//go:embed farprogram_bpf.o
var _FarProgramBytes []byte
